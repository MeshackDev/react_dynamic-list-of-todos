{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","onSelect","selectedTodo","className","map","todo","classNames","id","completed","title","type","onClick","currentTodo","TodoFilter","selectedOption","setSelectedOption","searchQuery","setSearchQuery","value","onChange","e","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","onClose","useState","user","setUser","isLoadingUser","setIsLoadingUser","loadUser","a","userId","userFromServer","useEffect","href","email","name","App","setTodos","setSelectedTodo","isLoadingTodos","setIsLoadingTodos","isModalOpen","setIsModalOpen","loadTodos","data","length","query","filteredOptionTodos","option","filter","handleOptionFilter","visibleTodos","toLowerCase","includes","selectedTodoId","selected","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5b816702.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  onSelect: (todoId: number) => void;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onSelect,\n  selectedTodo,\n}) => {\n  const iconClassName = (currentTodo: Todo): string => {\n    return currentTodo === selectedTodo ? 'far fa-eye-slash' : 'far fa-eye';\n  };\n\n  // const textClassName = ()\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': todo === selectedTodo,\n            })}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={todo.completed\n                ? 'has-text-success'\n                : 'has-text-danger'}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onSelect(todo.id)}\n              >\n                <span className=\"icon\">\n                  <i className={iconClassName(todo)} />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  selectedOption: string;\n  setSelectedOption: (query: string) => void;\n  searchQuery: string;\n  setSearchQuery: (query: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  selectedOption,\n  setSelectedOption,\n  searchQuery,\n  setSearchQuery,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedOption}\n            onChange={(e) => setSelectedOption(e.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchQuery}\n          onChange={e => setSearchQuery(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setSearchQuery('')}\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  onClose: () => void;\n  todo: Todo | null;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  onClose,\n  todo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoadingUser, setIsLoadingUser] = useState(false);\n\n  const loadUser = async () => {\n    if (todo) {\n      setIsLoadingUser(true);\n      const userFromServer = await getUser(todo.userId);\n\n      setUser(userFromServer);\n    }\n\n    setIsLoadingUser(false);\n  };\n\n  useEffect(() => {\n    loadUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoadingUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className=\"has-text-danger\">Planned</strong>\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [isLoadingTodos, setIsLoadingTodos] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedOption, setSelectedOption] = useState('All');\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const loadTodos = async () => {\n    setIsLoadingTodos(true);\n    const data = await getTodos();\n\n    if (data.length !== 0) {\n      setTodos(data);\n      setIsLoadingTodos(false);\n    }\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  const handleSelect = (selectedTodoId: number) => {\n    const selected = todos.find(({ id }) => id === selectedTodoId);\n\n    if (selected) {\n      setSelectedTodo(selected);\n    }\n\n    setIsModalOpen(true);\n  };\n\n  const handleClose = () => {\n    setIsModalOpen(false);\n    setSelectedTodo(null);\n  };\n\n  const handleOptionFilter = (option: string): Todo[] => {\n    switch (option) {\n      case 'All':\n        return todos;\n\n      case 'active':\n        return todos.filter(todo => !todo.completed);\n\n      case 'completed':\n        return todos.filter(todo => todo.completed);\n\n      default:\n        return todos;\n    }\n  };\n\n  const handleSearchFilter = (filteredTodos: Todo[], query: string) => {\n    return filteredTodos.filter(todo => todo.title.toLowerCase().includes(query.toLowerCase()));\n  };\n\n  const filteredOptionTodos = handleOptionFilter(selectedOption);\n  const visibleTodos = handleSearchFilter(filteredOptionTodos, searchQuery);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                selectedOption={selectedOption}\n                setSelectedOption={setSelectedOption}\n                searchQuery={searchQuery}\n                setSearchQuery={setSearchQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoadingTodos ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={visibleTodos}\n                  onSelect={handleSelect}\n                  selectedTodo={selectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isModalOpen && (\n        <TodoModal\n          onClose={handleClose}\n          todo={selectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}